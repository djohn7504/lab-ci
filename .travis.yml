sudo: false

dist: trusty

branches:
  only:
    - master									# <-------- prévient un re-build, si deploy.releases !

env:
  global:
    - TAG_TARGET='release-test'

script: echo "build $TRAVIS_BUILD_NUMBER" >> deploy/index.html

#	si existe pas ?..
before_deploy:
  - echo "==========================================================================="
  - echo "==========================================================================="
  - echo "==========================================================================="
#  - git ls-remote --exit-code --tags "$TAG_TARGET"
  - echo "==========================================================================="
  - echo "==========================================================================="
  - echo "==========================================================================="
#  - git checkout "$TAG_TARGET"					# <-------- aller dans la bonne branche..
#  - if [ git ls-remote --tags "$TAG_TARGET" ];
  - |
    if [ -n `git ls-remote --tags "$TAG_TARGET"` ];
    then
      git checkout "$TAG_TARGET";					# <-------- aller dans la bonne branche..
    else
      echo "NOT FOUND TAG $TAG_TARGET !!!!!!!!!!!!!!!!"
    fi
  - echo "==========================================================================="
  - echo "==========================================================================="
  - echo "==========================================================================="

deploy:
  - provider: releases
    on:
      branch: master
    api-key:
      - secure: $GITHUB_TOKEN
    skip-cleanup: true
    file: deploy/index.html

    tag_name: $TAG_TARGET						# <-------- cible du déploiement
    overwrite: true								# <-------- écrase les fichiers du tag existant !

    verbose: true

# utile ?..
after_deploy:
  - git checkout "master"

