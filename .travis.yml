sudo: false

dist: trusty

git:
# depth: 2
  depth: 3000         # !!!


#             *** IMPORTANT ****
#             
#             Travis CI fait un clone, avec une profondeur paramétrable.
#             ex: git clone --depth=2 --branch=master ..
#             Puis, fait un checkout du dernier commit.
#             ex: git checkout -qf 67890fd5bb81dba740fa3ea7b7c3442e89c4bced
#
#             Il ne faut donc pas s'y fier, pour des opération locale, si la profondeur est insufisante !
#             ex: git tag --list    -> peut être vide
#             ex: git checkout tags/release-test

env:
    global:
        # get all the branches referencing this commit
#       - REAL_BRANCH=$(git ls-remote origin | sed -n "\|$TRAVIS_COMMIT\s\+refs/heads/|{s///p}")

        # or check if we are on a particular branch:
#       - IS_RELEASE=$(git ls-remote origin | grep "$TRAVIS_COMMIT\s\+refs/heads/release$")

        - IS_RELEASE_TEST_EXIST=$(git ls-remote --exit-code --tags origin release-test)

branches:
  only:
    - master

script:
  - echo "======================================================"
  - echo "script.."
  - echo "======================================================"

#before_cache:
#before_script:
after_script:
  - echo "======================================================"
  - ls
  - echo "======================================================"
#  - ls $TRAVIS_BUILD_DIR
  - echo "======================================================"
#  - git ls-remote --tags 'release-test'
  - git ls-remote --exit-code --tags origin release-test

  - echo "======================================================"
#  - git rev-list --count --max-count=1 release-test  # 0 or 1
#  - git checkout master &&
#  - git checkout master
#  - git checkout release-test
#  - git checkout tags/release-test      # BAD if depth: 2
  - echo "======================================================"
#  - git tag --list                    # BAD if depth: 2
  - echo "IS_RELEASE_TEST_EXIST:"
  - echo "$IS_RELEASE_TEST_EXIST"
  - echo "======================================================"
  - if [ $(git ls-remote --exit-code --tags origin release-test) ]; then \
      echo "OK exist"; \
    else
      echo "NOT exist !!!"; \
      exit 1;
    fi
  - echo "======================================================"
