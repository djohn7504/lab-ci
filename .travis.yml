sudo: false

dist: trusty

branches:
  only:
    - master

env:
  global:
    - TAG_TARGET='master-build'

script:
  - |
    echo "======================================================"
    echo "Travis CI (build $TRAVIS_BUILD_NUMBER)"
    echo "======================================================"
    echo "build $TRAVIS_BUILD_NUMBER" >> deploy/build-linux.txt

before_deploy:
  # ***************************************************************************************************
  # HACK: pour écraser/compléter les assets d'un tag existant, par d'autres CI, comme AppVeyor, etc.. !!!
  #       1. if tag exist..
  #       2. fetch -> convert the already existing shallow clone to a full clone
  #       3. checkout -> pas top, mais pas trouvé mieux !
  - 'if (git ls-remote --exit-code --tags origin $TAG_TARGET >/dev/null) ; then
      git fetch --unshallow --tags;
      git checkout $TAG_TARGET;
    fi'
  # ***************************************************************************************************

deploy:
  - provider: releases
    on:
      branch: master
    api-key:
      - secure: $GITHUB_TOKEN
    skip-cleanup: true
    file: deploy/build-linux.txt
    tag_name: $TAG_TARGET
    overwrite: true
    verbose: true

after_deploy:
  # ***************************************************************************************************
  # restore.. (see the HACK)
  - git checkout "master"
  # ***************************************************************************************************

after_script:
  - sh travis-to-gh-pages-branch.sh
  - sh travis-to-gh-pages-docs.sh
